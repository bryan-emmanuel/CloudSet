{
 "kind": "discovery#restDescription",
 "etag": "\"381e4s_8vUCNPclzPT4yxtto0eA/Y5iNshnaz-iUJOFBTyttcqQp9MY\"",
 "discoveryVersion": "v1",
 "id": "subscriberendpoint:v1",
 "name": "subscriberendpoint",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "piusvelte.com",
 "ownerName": "piusvelte.com",
 "packagePath": "cloudset.gwt.server",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://cloud-set.appspot.com/_ah/api/subscriberendpoint/v1/",
 "basePath": "/_ah/api/subscriberendpoint/v1/",
 "rootUrl": "https://cloud-set.appspot.com/_ah/api/",
 "servicePath": "subscriberendpoint/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "Key": {
   "id": "Key",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "complete": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "kind": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "namespace": {
     "type": "string"
    },
    "parent": {
     "$ref": "Key"
    }
   }
  },
  "Publication": {
   "id": "Publication",
   "type": "object",
   "properties": {
    "action": {
     "type": "string"
    },
    "key": {
     "$ref": "Key"
    },
    "publisher": {
     "type": "string"
    },
    "timestamp": {
     "type": "string",
     "format": "int64"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "PublicationCollection": {
   "id": "PublicationCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Publication"
     }
    }
   }
  },
  "Subscriber": {
   "id": "Subscriber",
   "type": "object",
   "properties": {
    "account": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "model": {
     "type": "string"
    },
    "nickname": {
     "type": "string"
    },
    "subscriptions": {
     "type": "array",
     "items": {
      "$ref": "Key"
     }
    },
    "timestamp": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "SubscriberCollection": {
   "id": "SubscriberCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Subscriber"
     }
    }
   }
  }
 },
 "resources": {
  "subscriberEndpoint": {
   "methods": {
    "add": {
     "id": "subscriberendpoint.subscriberEndpoint.add",
     "path": "add",
     "httpMethod": "POST",
     "request": {
      "$ref": "Subscriber"
     },
     "response": {
      "$ref": "Subscriber"
     }
    },
    "get": {
     "id": "subscriberendpoint.subscriberEndpoint.get",
     "path": "subscriber/{id}",
     "httpMethod": "GET",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "Subscriber"
     }
    },
    "patch": {
     "id": "subscriberendpoint.subscriberEndpoint.patch",
     "path": "subscriber",
     "httpMethod": "PATCH",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "request": {
      "$ref": "Subscriber"
     },
     "response": {
      "$ref": "Subscriber"
     }
    },
    "remove": {
     "id": "subscriberendpoint.subscriberEndpoint.remove",
     "path": "remove/{id}",
     "httpMethod": "DELETE",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "Subscriber"
     }
    },
    "subscribe": {
     "id": "subscriberendpoint.subscriberEndpoint.subscribe",
     "path": "subscribe/{subscriber}/{publisher}/{action}",
     "httpMethod": "POST",
     "parameters": {
      "action": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "publisher": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "subscriber": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "subscriber",
      "publisher",
      "action"
     ],
     "response": {
      "$ref": "PublicationCollection"
     }
    },
    "subscribers": {
     "id": "subscriberendpoint.subscriberEndpoint.subscribers",
     "path": "subscribers/{id}",
     "httpMethod": "POST",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "SubscriberCollection"
     }
    },
    "subscriptions": {
     "id": "subscriberendpoint.subscriberEndpoint.subscriptions",
     "path": "subscriptions/{subscriber}/{publisher}",
     "httpMethod": "POST",
     "parameters": {
      "publisher": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "subscriber": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "subscriber",
      "publisher"
     ],
     "response": {
      "$ref": "PublicationCollection"
     }
    },
    "unsubscribe": {
     "id": "subscriberendpoint.subscriberEndpoint.unsubscribe",
     "path": "unsubscribe/{subscriber}",
     "httpMethod": "POST",
     "parameters": {
      "subscriber": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "subscriber"
     ],
     "request": {
      "$ref": "Key"
     },
     "response": {
      "$ref": "PublicationCollection"
     }
    },
    "update": {
     "id": "subscriberendpoint.subscriberEndpoint.update",
     "path": "subscriber",
     "httpMethod": "PUT",
     "request": {
      "$ref": "Subscriber"
     },
     "response": {
      "$ref": "Subscriber"
     }
    }
   }
  }
 }
}
