{
 "kind": "discovery#restDescription",
 "etag": "\"381e4s_8vUCNPclzPT4yxtto0eA/MIOYSttgRWyGzKZZiXkvY4hwr0I\"",
 "discoveryVersion": "v1",
 "id": "deviceendpoint:v1",
 "name": "deviceendpoint",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "piusvelte.com",
 "ownerName": "piusvelte.com",
 "packagePath": "cloudset.gwt.server",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://cloud-set.appspot.com/_ah/api/deviceendpoint/v1/",
 "basePath": "/_ah/api/deviceendpoint/v1/",
 "rootUrl": "https://cloud-set.appspot.com/_ah/api/",
 "servicePath": "deviceendpoint/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "Action": {
   "id": "Action",
   "type": "object",
   "properties": {
    "extras": {
     "type": "array",
     "items": {
      "$ref": "Extra"
     }
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "name": {
     "type": "string"
    },
    "publisher": {
     "type": "string"
    },
    "subscribers": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "timestamp": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "ActionCollection": {
   "id": "ActionCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Action"
     }
    }
   }
  },
  "Device": {
   "id": "Device",
   "type": "object",
   "properties": {
    "account": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "model": {
     "type": "string"
    },
    "nickname": {
     "type": "string"
    },
    "publications": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    },
    "subscriptions": {
     "type": "array",
     "items": {
      "type": "string",
      "format": "int64"
     }
    },
    "timestamp": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "DeviceCollection": {
   "id": "DeviceCollection",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Device"
     }
    }
   }
  },
  "Extra": {
   "id": "Extra",
   "type": "object",
   "properties": {
    "name": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  }
 },
 "resources": {
  "deviceEndpoint": {
   "methods": {
    "add": {
     "id": "deviceendpoint.deviceEndpoint.add",
     "path": "add",
     "httpMethod": "POST",
     "request": {
      "$ref": "Device"
     },
     "response": {
      "$ref": "Device"
     }
    },
    "get": {
     "id": "deviceendpoint.deviceEndpoint.get",
     "path": "device/{id}",
     "httpMethod": "GET",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "Device"
     }
    },
    "list": {
     "id": "deviceendpoint.deviceEndpoint.list",
     "path": "device",
     "httpMethod": "GET",
     "response": {
      "$ref": "DeviceCollection"
     }
    },
    "patch": {
     "id": "deviceendpoint.deviceEndpoint.patch",
     "path": "device",
     "httpMethod": "PATCH",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "request": {
      "$ref": "Device"
     },
     "response": {
      "$ref": "Device"
     }
    },
    "remove": {
     "id": "deviceendpoint.deviceEndpoint.remove",
     "path": "remove/{id}",
     "httpMethod": "DELETE",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "response": {
      "$ref": "Device"
     }
    },
    "subscribe": {
     "id": "deviceendpoint.deviceEndpoint.subscribe",
     "path": "subscribe/{subscriber}/{publisher}/{action}",
     "httpMethod": "POST",
     "parameters": {
      "action": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "publisher": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "subscriber": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "subscriber",
      "publisher",
      "action"
     ],
     "response": {
      "$ref": "Action"
     }
    },
    "subscribers": {
     "id": "deviceendpoint.deviceEndpoint.subscribers",
     "path": "subscribers/{publisher}",
     "httpMethod": "POST",
     "parameters": {
      "publisher": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "publisher"
     ],
     "response": {
      "$ref": "DeviceCollection"
     }
    },
    "subscriptions": {
     "id": "deviceendpoint.deviceEndpoint.subscriptions",
     "path": "subscriptions/{subscriber}/{publisher}",
     "httpMethod": "POST",
     "parameters": {
      "publisher": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "subscriber": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "subscriber",
      "publisher"
     ],
     "response": {
      "$ref": "ActionCollection"
     }
    },
    "unsubscribe": {
     "id": "deviceendpoint.deviceEndpoint.unsubscribe",
     "path": "unsubscribe/{subscriber}/{publication}",
     "httpMethod": "POST",
     "parameters": {
      "publication": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      },
      "subscriber": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "subscriber",
      "publication"
     ]
    },
    "update": {
     "id": "deviceendpoint.deviceEndpoint.update",
     "path": "device",
     "httpMethod": "PUT",
     "request": {
      "$ref": "Device"
     },
     "response": {
      "$ref": "Device"
     }
    }
   }
  }
 }
}
